# .gitignore
# created by: https://www.gitignore.io/api/django,git,jupyternotebooks,linux,macos,python,windows,virtualenv,visualstudiocode
# with minor modification

# extra
.extra
others
screenshots
licences

# ----------------------------------------
# Django
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# ----------------------------------------
# Git
# created by git for backups.
# to disable backups in git:
# $ git config --global mergetool.keepBackup false
*.orig

# created by git when using merge tools for conflicts
*.BACKUP.*
*.BASE.*
*.LOCAL.*
*.REMOTE.*
*_BACKUP_*.txt
*_BASE_*.txt
*_LOCAL_*.txt
*_REMOTE_*.txt

# ----------------------------------------
# Jupyter
.ipynb_checkpoints
*/.ipynb_checkpoints/*

# ipython
profile_default/
ipython_config.py

# to remove previous ipynb_checkpoints
# $ git rm -r .ipynb_checkpoints/

# ----------------------------------------
# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# kde directory preferences
.directory

# trash folders which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ----------------------------------------
# macOS
.DS_Store
.AppleDouble
.LSOverride

# icon must end with two \r
Icon

# thumbnails
._*

# files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# ----------------------------------------
# Python
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# installer logs
pip-log.txt
pip-delete-this-directory.txt

# unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# translations
*.mo
*.pot

# scrapy stuff:
.scrapy

# sphinx documentation
docs/_build/

# PyBuilder
target/

# pyenv
.python-version

# pipenv
# according to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
# however, in case of collaboration, if having platform-specific dependencies or dependencies
# having no cross-platform support, pipenv may install dependencies that don't work, or not
# install all needed dependencies.
# Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# Mr Developer
.mr.developer.cfg
.project
.pydevproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# virtualenv
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
pip-selfcheck.json

# ----------------------------------------
# VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# ignore all local history of files
.history

# ----------------------------------------
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# dump file
*.stackdump

# folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# shortcuts
*.lnk
